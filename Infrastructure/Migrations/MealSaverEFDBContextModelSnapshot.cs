// <auto-generated />
using System;
using Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(MealSaverEFDBContext))]
    partial class MealSaverEFDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Canteen", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<bool>("OffersWarmMeals")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Canteens");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b7793f12-f278-4673-adf7-b2806572d02d"),
                            City = 0,
                            Location = 0,
                            OffersWarmMeals = true
                        },
                        new
                        {
                            Id = new Guid("50edac11-0d16-4733-ad00-a95c6faae7be"),
                            City = 0,
                            Location = 1,
                            OffersWarmMeals = false
                        },
                        new
                        {
                            Id = new Guid("6671b047-37e2-437c-8e4b-d9918ca2fd1d"),
                            City = 0,
                            Location = 2,
                            OffersWarmMeals = true
                        });
                });

            modelBuilder.Entity("Domain.CanteenEmployee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CanteenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CanteenId");

                    b.ToTable("CanteenEmployees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("67ae4cb4-6ad8-4407-b080-61c6f0de37df"),
                            CanteenId = new Guid("b7793f12-f278-4673-adf7-b2806572d02d"),
                            Email = "alice.johnson@mail.com",
                            EmployeeNumber = "EMP001",
                            Name = "Alice Johnson"
                        },
                        new
                        {
                            Id = new Guid("6c282c84-423e-4404-89e1-125b6b1da3bb"),
                            CanteenId = new Guid("50edac11-0d16-4733-ad00-a95c6faae7be"),
                            Email = "bob.smith@mail.com",
                            EmployeeNumber = "EMP002",
                            Name = "Bob Smith"
                        });
                });

            modelBuilder.Entity("Domain.MealPackage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CanteenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptiveName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is18Plus")
                        .HasColumnType("bit");

                    b.Property<int>("MealType")
                        .HasColumnType("int");

                    b.Property<DateTime>("PickupTimeFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PickupTimeTill")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ReservedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CanteenId");

                    b.HasIndex("ReservedById");

                    b.ToTable("MealPackages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e79d1691-8cb9-4c7c-8c30-a74bcc2334e7"),
                            CanteenId = new Guid("b7793f12-f278-4673-adf7-b2806572d02d"),
                            DescriptiveName = "Healthy Breakfast",
                            Is18Plus = false,
                            MealType = 0,
                            PickupTimeFrom = new DateTime(2024, 10, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            PickupTimeTill = new DateTime(2024, 10, 1, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            Price = 5.99m
                        },
                        new
                        {
                            Id = new Guid("ade3b656-67d4-41cf-9e5d-a3bf3567567d"),
                            CanteenId = new Guid("50edac11-0d16-4733-ad00-a95c6faae7be"),
                            DescriptiveName = "Lunch Special",
                            Is18Plus = false,
                            MealType = 1,
                            PickupTimeFrom = new DateTime(2024, 10, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PickupTimeTill = new DateTime(2024, 10, 1, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            Price = 7.49m
                        },
                        new
                        {
                            Id = new Guid("3c9a7cfb-1274-4f2e-8a22-ea379e19ac30"),
                            CanteenId = new Guid("6671b047-37e2-437c-8e4b-d9918ca2fd1d"),
                            DescriptiveName = "Dinner Combo",
                            Is18Plus = false,
                            MealType = 2,
                            PickupTimeFrom = new DateTime(2024, 10, 1, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            PickupTimeTill = new DateTime(2024, 10, 1, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            Price = 12.99m
                        },
                        new
                        {
                            Id = new Guid("73e7c6a3-ad88-4e05-a915-910882174434"),
                            CanteenId = new Guid("b7793f12-f278-4673-adf7-b2806572d02d"),
                            DescriptiveName = "Snack Pack",
                            Is18Plus = false,
                            MealType = 3,
                            PickupTimeFrom = new DateTime(2024, 10, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            PickupTimeTill = new DateTime(2024, 10, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            Price = 3.49m
                        },
                        new
                        {
                            Id = new Guid("f27d3465-03f4-4d2d-86ad-16b882ef29e1"),
                            CanteenId = new Guid("6671b047-37e2-437c-8e4b-d9918ca2fd1d"),
                            DescriptiveName = "Evening Beers",
                            Is18Plus = true,
                            MealType = 4,
                            PickupTimeFrom = new DateTime(2024, 10, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            PickupTimeTill = new DateTime(2024, 10, 1, 22, 30, 0, 0, DateTimeKind.Unspecified),
                            Price = 8.99m
                        });
                });

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ContainsAlcohol")
                        .HasColumnType("bit");

                    b.Property<string>("DescriptiveName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3f96261-1a7e-483c-b1de-8d166983ea76"),
                            ContainsAlcohol = false,
                            DescriptiveName = "Appel",
                            Photo = "https://i.imgur.com/Dy86B5w.png"
                        },
                        new
                        {
                            Id = new Guid("e0636857-29ba-4a5f-a127-18acab5f4571"),
                            ContainsAlcohol = false,
                            DescriptiveName = "Peer",
                            Photo = "https://i.imgur.com/HLRqlU9.png"
                        },
                        new
                        {
                            Id = new Guid("eeb5e5d1-3ad8-4501-b633-7cd2ae560380"),
                            ContainsAlcohol = false,
                            DescriptiveName = "Broodje Frikandel",
                            Photo = "https://i.imgur.com/G6puzUN.png"
                        },
                        new
                        {
                            Id = new Guid("3e3b72d4-b617-43c7-bd87-5d52fea507ff"),
                            ContainsAlcohol = false,
                            DescriptiveName = "Kaiserbroodje",
                            Photo = "https://i.imgur.com/rMdiQiP.png"
                        },
                        new
                        {
                            Id = new Guid("1ed81d6a-7e1e-4417-b74b-65f2dd77d4fe"),
                            ContainsAlcohol = true,
                            DescriptiveName = "Hertog Jan",
                            Photo = "https://i.imgur.com/InH4TUw.jpg"
                        });
                });

            modelBuilder.Entity("Domain.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("28a3049a-76a7-46d9-8b9b-20d03b8a1b65"),
                            BirthDate = new DateTime(1995, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = 0,
                            Email = "john.doe@student.com",
                            Name = "John Doe",
                            PhoneNumber = "0612345678",
                            StudentNumber = "STU001"
                        },
                        new
                        {
                            Id = new Guid("b49371d6-e10a-44d6-9de8-00c75a755bac"),
                            BirthDate = new DateTime(1997, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = 1,
                            Email = "jane.smith@example.com",
                            Name = "Jane Smith",
                            PhoneNumber = "0612345678",
                            StudentNumber = "STU002"
                        },
                        new
                        {
                            Id = new Guid("1269dae6-4db3-4259-b8a1-1a3fb5431a3d"),
                            BirthDate = new DateTime(1996, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = 2,
                            Email = "michael.johnson@example.com",
                            Name = "Michael Johnson",
                            PhoneNumber = "0612345678",
                            StudentNumber = "STU003"
                        },
                        new
                        {
                            Id = new Guid("41a4684d-be7d-4c61-b6d7-ffdbf5641901"),
                            BirthDate = new DateTime(2005, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = 0,
                            Email = "emily.davis@example.com",
                            Name = "Emily Davis",
                            PhoneNumber = "0612345678",
                            StudentNumber = "STU004"
                        },
                        new
                        {
                            Id = new Guid("559ad4b4-94a7-499f-89bc-c85daa2d2ea0"),
                            BirthDate = new DateTime(1999, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = 1,
                            Email = "william.brown@example.com",
                            Name = "William Brown",
                            PhoneNumber = "0612345678",
                            StudentNumber = "STU005"
                        });
                });

            modelBuilder.Entity("MealPackage_Product", b =>
                {
                    b.Property<Guid>("MealPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MealPackageId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("MealPackage_Product");

                    b.HasData(
                        new
                        {
                            MealPackageId = new Guid("e79d1691-8cb9-4c7c-8c30-a74bcc2334e7"),
                            ProductId = new Guid("b3f96261-1a7e-483c-b1de-8d166983ea76")
                        },
                        new
                        {
                            MealPackageId = new Guid("e79d1691-8cb9-4c7c-8c30-a74bcc2334e7"),
                            ProductId = new Guid("e0636857-29ba-4a5f-a127-18acab5f4571")
                        },
                        new
                        {
                            MealPackageId = new Guid("ade3b656-67d4-41cf-9e5d-a3bf3567567d"),
                            ProductId = new Guid("eeb5e5d1-3ad8-4501-b633-7cd2ae560380")
                        },
                        new
                        {
                            MealPackageId = new Guid("ade3b656-67d4-41cf-9e5d-a3bf3567567d"),
                            ProductId = new Guid("3e3b72d4-b617-43c7-bd87-5d52fea507ff")
                        },
                        new
                        {
                            MealPackageId = new Guid("3c9a7cfb-1274-4f2e-8a22-ea379e19ac30"),
                            ProductId = new Guid("3e3b72d4-b617-43c7-bd87-5d52fea507ff")
                        },
                        new
                        {
                            MealPackageId = new Guid("3c9a7cfb-1274-4f2e-8a22-ea379e19ac30"),
                            ProductId = new Guid("1ed81d6a-7e1e-4417-b74b-65f2dd77d4fe")
                        });
                });

            modelBuilder.Entity("Domain.CanteenEmployee", b =>
                {
                    b.HasOne("Domain.Canteen", "Canteen")
                        .WithMany()
                        .HasForeignKey("CanteenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canteen");
                });

            modelBuilder.Entity("Domain.MealPackage", b =>
                {
                    b.HasOne("Domain.Canteen", "Canteen")
                        .WithMany("MealPackages")
                        .HasForeignKey("CanteenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Student", "ReservedBy")
                        .WithMany()
                        .HasForeignKey("ReservedById");

                    b.Navigation("Canteen");

                    b.Navigation("ReservedBy");
                });

            modelBuilder.Entity("MealPackage_Product", b =>
                {
                    b.HasOne("Domain.MealPackage", null)
                        .WithMany()
                        .HasForeignKey("MealPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Canteen", b =>
                {
                    b.Navigation("MealPackages");
                });
#pragma warning restore 612, 618
        }
    }
}
